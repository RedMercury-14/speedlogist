import { AG_GRID_LOCALE_RU } from './AG-Grid/ag-grid-locale-RU.js'
import { gridColumnLocalState, gridFilterLocalState, ResetStateToolPanel } from './AG-Grid/ag-grid-utils.js'
import { approveCreateRotationUrl, getRotationListUrl, loadRotationExcelUrl, preCreateRotationUrl } from './globalConstants/urls.js'
import { snackbar } from './snackbar/snackbar.js'
import { dateHelper, debounce, getData, hideLoadingSpinner, isAdmin, showLoadingSpinner } from './utils.js'
import { bootstrap5overlay } from './bootstrap5overlay/bootstrap5overlay.js'
import { ajaxUtils } from './ajaxUtils.js'

const PAGE_NAME = 'rotationList'
const LOCAL_STORAGE_KEY = `AG_Grid_settings_to_${PAGE_NAME}`
const DATES_KEY = `searchDates_to_${PAGE_NAME}`

const role = document.querySelector('#role').value

const TO_LIST_REG = /^(?:–°–µ—Ç—å|\b[1-9]\d{1,4}\b(?:,\b[1-9]\d{1,4}\b)*)$/

const debouncedSaveColumnState = debounce(saveColumnState, 300)
const debouncedSaveFilterState = debounce(saveFilterState, 300)


const columnDefs = [
	{
		headerName: "‚Ññ", field: "idRotation",
		minWidth: 60, width: 60,
	},
	{ headerName: "–ö–æ–¥ —Ç–æ–≤–∞—Ä–∞", field: "goodIdNew", width: 100, },
	{ headerName: "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", field: "goodNameNew", },
	{
		headerName: "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ä–æ—Ç–∞—Ü–∏–∏", field: "startDate", width: 115,
		valueFormatter: dateValueFormatter,
		comparator: dateComparator,
		filterParams: { valueFormatter: dateValueFormatter, },
	},
	{
		headerName: "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–æ—Ç–∞—Ü–∏–∏", field: "endDate", width: 115,
		valueFormatter: dateValueFormatter,
		comparator: dateComparator,
		filterParams: { valueFormatter: dateValueFormatter, },
	},
	{ headerName: "–î–µ–π—Å—Ç–≤—É–µ—Ç?", field: "valid", },
	{ headerName: "–ö–æ–¥ –∞–Ω–∞–ª–æ–≥–∞", field: "goodIdAnalog", width: 100, },
	{ headerName: "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–æ–≥–∞", field: "goodNameAnalog", },
	{
		headerName: "–°–ø–∏—Å–æ–∫ –¢–û / –°–µ—Ç—å", field: "toList",
		editable: true,
		cellEditorPopup: true,
		cellEditor: 'agLargeTextCellEditor',
		onCellValueChanged: params => {
			
		}
	},
	{
		headerName: "–£—á–∏—Ç—ã–≤–∞—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞?", field: "countOldCodeRemains",
		width: 100,
		cellDataType: false,
		valueFormatter: (params) => params.value ? "–î–∞" : "–ù–µ—Ç",
		filterParams: { valueFormatter: (params) => params.value ? "–î–∞" : "–ù–µ—Ç", },
	},
	{ headerName: "–ü–æ—Ä–æ–≥ –¢–ó —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞", field: "limitOldCode", width: 100, },
	{ headerName: "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞ –ø—Ä–æ–¥–∞–∂ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ –Ω–∞ –Ω–æ–≤—ã–π", field: "coefficient", width: 100, },
	{
		headerName: "–ü–µ—Ä–µ–Ω–æ—Å–∏–º –ø—Ä–æ–¥–∞–∂–∏ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ –∫ –ø—Ä–æ–¥–∞–∂–∞–º –Ω–æ–≤–æ–≥–æ, –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —É –Ω–æ–≤–æ–≥–æ?", field: "transferOldToNew",
		width: 130,
		cellDataType: false,
		valueFormatter: (params) => params.value ? "–î–∞" : "–ù–µ—Ç",
		filterParams: { valueFormatter: (params) => params.value ? "–î–∞" : "–ù–µ—Ç", },
	},
	{
		headerName: "–†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é, –µ—Å–ª–∏ –µ—Å—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ –Ω–∞ –†–¶?", field: "distributeNewPosition",
		width: 120,
		cellDataType: false,
		valueFormatter: (params) => params.value ? "–î–∞" : "–ù–µ—Ç",
		filterParams: { valueFormatter: (params) => params.value ? "–î–∞" : "–ù–µ—Ç", },
	},
	{ headerName: "–ü–æ—Ä–æ–≥ –æ—Å—Ç–∞—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ –Ω–∞ –¢–û (—à—Ç/–∫–≥)", field: "limitOldPositionRemain", width: 100, },
	{ headerName: "–§–ò–û –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–∞ —Ä–æ—Ç–∞—Ü–∏–∏", field: "rotationInitiator", },
]
const gridOptions = {
	columnDefs: columnDefs,
	defaultColDef: {
		headerClass: 'px-2 font-weight-bold',
		cellClass: 'px-2 text-center',
		// flex: 1,
		minWidth: 100,
		resizable: true,
		suppressMenu: true,
		sortable: true,
		filter: true,
		floatingFilter: true,
		wrapText: true,
		autoHeight: true,
		wrapHeaderText: true,
		autoHeaderHeight: true,
		enableRowGroup: true,
	},
	animateRows: true,
	suppressDragLeaveHidesColumns: true,
	suppressRowClickSelection: true,
	enableBrowserTooltips: true,
	localeText: AG_GRID_LOCALE_RU,
	onSortChanged: debouncedSaveColumnState,
	onColumnResized: debouncedSaveColumnState,
	onColumnMoved: debouncedSaveColumnState,
	onColumnVisible: debouncedSaveColumnState,
	onColumnPinned: debouncedSaveColumnState,
	getContextMenuItems: getContextMenuItems,
	getRowId: (params) => params.data.idRotation,
	sideBar: {
		toolPanels: [
			{
				id: 'columns',
				labelDefault: 'Columns',
				labelKey: 'columns',
				iconKey: 'columns',
				toolPanel: 'agColumnsToolPanel',
				toolPanelParams: {
					suppressRowGroups: true,
					suppressValues: true,
					suppressPivots: true,
					suppressPivotMode: true,
				},
			},
			{
				id: 'filters',
				labelDefault: 'Filters',
				labelKey: 'filters',
				iconKey: 'filter',
				toolPanel: 'agFiltersToolPanel',
			},
			{
				id: 'resetState',
				iconKey: 'menu',
				labelDefault: '–°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫',
				toolPanel: ResetStateToolPanel,
				toolPanelParams: {
					localStorageKey: LOCAL_STORAGE_KEY,
				},
			},
		],
	},
}

document.addEventListener('DOMContentLoaded', async () => {
	const gridDiv = document.querySelector('#myGrid')
	renderTable(gridDiv, gridOptions)
	restoreColumnState()

	const rotationData = await getRotationData()
	console.log("üöÄ ~ document.addEventListener ~ rotationData:", rotationData)
	updateTable(gridOptions, rotationData)

	rotationForm.addEventListener('submit', rotationFormSubmitHandler)
	sendExcelForm.addEventListener('submit', sendExcelFormHandler)
})


// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ä–æ—Ç–∞—Ü–∏–∏
function rotationFormSubmitHandler(e) {
	e.preventDefault()
	const formData = new FormData(e.target)
	const data = Object.fromEntries(formData)

	const payload = {
		...data,
		idRotation: data.idRotation ? Number(data.idRotation) : '',
		goodIdNew: data.goodIdNew ? Number(data.goodIdNew) : '',
		goodIdAnalog: data.goodIdAnalog ? Number(data.goodIdAnalog) : '',
		countOldCodeRemains: data.countOldCodeRemains === '–î–∞',
		limitOldCode: data.limitOldCode ? Number(data.limitOldCode) : '',
		coefficient: data.coefficient ? Number(data.coefficient) : '',
		transferOldToNew: data.transferOldToNew === '–î–∞',
		distributeNewPosition: data.distributeNewPosition === '–î–∞',
		limitOldPositionRemain: data.limitOldPositionRemain ? Number(data.limitOldPositionRemain) : '',
		toList: data.toList.trim(),
	}

	if (!TO_LIST_REG.test(payload.toList)) {
		snackbar.show('–£–∫–∞–∂–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –¢–û —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –ª–∏–±–æ —Å–ª–æ–≤–æ "–°–µ—Ç—å" —Å —É—á–µ—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞')
		return
	}

	const timeoutId = setTimeout(() => bootstrap5overlay.showOverlay(), 300)

	ajaxUtils.postJSONdata({
		url: preCreateRotationUrl,
		data: data,
		successCallback: async (res) => {
			clearTimeout(timeoutId)
			bootstrap5overlay.hideOverlay()

			if (res.status === '200') {
				const data = await getRotationData()
				updateTable(gridOptions, data)
				$(`#rotationModal`).modal('hide')
				res.message && snackbar.show(res.message)
				return
			}

			if (res.status === '205') {
				$(`#rotationModal`).modal('hide')
				const isApprove = confirm(`${res.message} –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ—Ç–∞—Ü–∏–∏?`)
				if (isApprove) {
					approveCreateRotation(payload)
				} else {
					alert('–†–æ—Ç–∞—Ü–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞')
				}
				return
			}

			if (res.status === '100') {
				const message = res.message ? res.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
				snackbar.show(message)
				return
			}
		},
		errorCallback: () => {
			clearTimeout(timeoutId)
			bootstrap5overlay.hideOverlay()
		}
	})
}

// –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ä–æ—Ç–∞—Ü–∏–∏
function approveCreateRotation(rotation) {
	const timeoutId = setTimeout(() => bootstrap5overlay.showOverlay(), 300)

	ajaxUtils.postJSONdata({
		url: approveCreateRotationUrl,
		data: rotation,
		successCallback: async (res) => {
			clearTimeout(timeoutId)
			bootstrap5overlay.hideOverlay()

			if (res.status === '200') {
				const data = await getRotationData()
				updateTable(gridOptions, data)
				$(`#rotationModal`).modal('hide')
				res.message && snackbar.show(res.message)
				return
			}

			if (res.status === '100') {
				const message = res.message ? res.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
				snackbar.show(message)
				return
			}
		},
		errorCallback: () => {
			clearTimeout(timeoutId)
			bootstrap5overlay.hideOverlay()
		}
	})

}

// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã —ç–∫—Å–µ–ª—å
function sendExcelFormHandler(e) {
	e.preventDefault()

	if (!isAdmin(role)) return

	const submitButton = e.submitter
	const file = new FormData(e.target)

	showLoadingSpinner(submitButton)

	ajaxUtils.postMultipartFformData({
		url: loadRotationExcelUrl,
		data: file,
		successCallback: async (res) => {
			hideLoadingSpinner(submitButton, '–ó–∞–≥—Ä—É–∑–∏—Ç—å')

			if (res === '200') {
				const data = await getRotationData()
				updateTable(gridOptions, data)
				snackbar.show('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
				$(`#sendExcelModal`).modal('hide')
				return
			}

			if (res === '100') {
				const errorMessage = res.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö'
				snackbar.show(errorMessage)
				return
			}
		},
		errorCallback: () => hideLoadingSpinner(submitButton, '–ó–∞–≥—Ä—É–∑–∏—Ç—å')
	})
}


// –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
async function getRotationData() {
	try {
		const res = await getData(getRotationListUrl)
		return res ? res.reviews : []
	} catch (error) {
		console.error(error)
		snackbar.show('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö')
	}
}

// –º–µ—Ç–æ–¥—ã —Ç–∞–±–ª–∏—Ü—ã
function renderTable(gridDiv, gridOptions) {
	new agGrid.Grid(gridDiv, gridOptions)
	gridOptions.api.setRowData([])
	gridOptions.api.showNoRowsOverlay()
}
function updateTable(gridOptions, data) {
	if (!data || !data.length) {
		gridOptions.api.setRowData([])
		gridOptions.api.showNoRowsOverlay()
		return
	}

	const mappingData = getMappingData(data)
	gridOptions.api.setRowData(mappingData)
	gridOptions.api.hideOverlay()
}
function getMappingData(data) {
	return data.map(mapCallback)
}
function mapCallback(item) {
	return {
		...item,
	}
}
function getContextMenuItems (params) {
	const rowNode = params.node
	if (!rowNode) return []

	const items = [
		{
			name: "–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫",
			action: () => {
				gridColumnLocalState.resetState(params, LOCAL_STORAGE_KEY)
			},
		},
		{
			name: `–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤`,
			action: () => {
				gridFilterLocalState.resetState(params, LOCAL_STORAGE_KEY)
			},
		},
		"separator",
		"excelExport"
	]

	return items
}


// –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä—ã –¥–∞—Ç –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
function dateComparator(date1, date2) {
	if (!date1 || !date2) return 0
	const date1Value = new Date(date1).getTime()
	const date2Value = new Date(date2).getTime()
	return date1Value - date2Value
}
function dateValueFormatter(params) {
	const date = params.value
	if (!date) return ''
	return dateHelper.getFormatDate(date)
}
function dateTimeValueFormatter(params) {
	const date = params.value
	if (!date) return ''
	return dateHelper.getFormatDateTime(date)
}

// —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∫–æ–ª–æ–Ω–æ–∫
function saveColumnState() {
	gridColumnLocalState.saveState(gridOptions, LOCAL_STORAGE_KEY)
}
function restoreColumnState() {
	gridColumnLocalState.restoreState(gridOptions, LOCAL_STORAGE_KEY)
}

// —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∫–æ–ª–æ–Ω–æ–∫
function saveFilterState() {
	gridFilterLocalState.saveState(gridOptions, LOCAL_STORAGE_KEY)
}
function restoreFilterState() {
	gridFilterLocalState.restoreState(gridOptions, LOCAL_STORAGE_KEY)
}

// –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
function showMessageModal(message) {
	const messageContainer = document.querySelector('#messageContainer')
	messageContainer.innerHTML = message
	$('#displayMessageModal').modal('show')
}


function roundNumber(num, fraction) {
	return Math.round((Number(num) + Number.EPSILON) * fraction) / fraction
}



